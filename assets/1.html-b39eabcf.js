import{_ as e,Y as t,Z as i,$ as a,a0 as n,a1 as l,a3 as c,a2 as o,H as p}from"./framework-52b6375a.js";const r={},d=a("h1",{id:"gitlab部署",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#gitlab部署","aria-hidden":"true"},"#"),n(" gitlab部署")],-1),u=a("h2",{id:"使用docker-compose部署gitlab",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#使用docker-compose部署gitlab","aria-hidden":"true"},"#"),n(" 使用docker-compose部署gitlab")],-1),b={id:"_1-安装docker并配置docker-compose-查看使用方式",tabindex:"-1"},v=a("a",{class:"header-anchor",href:"#_1-安装docker并配置docker-compose-查看使用方式","aria-hidden":"true"},"#",-1),k=o(`<h3 id="_2-创建gitlab目录" tabindex="-1"><a class="header-anchor" href="#_2-创建gitlab目录" aria-hidden="true">#</a> 2.创建gitlab目录</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /data/env/gitlab
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_3-创建gitlab配置目录" tabindex="-1"><a class="header-anchor" href="#_3-创建gitlab配置目录" aria-hidden="true">#</a> 3.创建gitlab配置目录</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /home/env/gitlab/config
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-映射目录配置-附配置文件" tabindex="-1"><a class="header-anchor" href="#_3-映射目录配置-附配置文件" aria-hidden="true">#</a> 3.映射目录配置 (附配置文件)</h3><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&quot;3.6&quot;</span>
<span class="token key atrule">services</span><span class="token punctuation">:</span>
  <span class="token key atrule">gitlab</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> gitlab/gitlab<span class="token punctuation">-</span>ee<span class="token punctuation">:</span>15.8.3<span class="token punctuation">-</span>ee.0
    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> gitlab
    <span class="token key atrule">user</span><span class="token punctuation">:</span> root
    <span class="token key atrule">privileged</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always
    <span class="token key atrule">hostname</span><span class="token punctuation">:</span> gitlab.brinishness.eu.org
    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> /etc/localtime<span class="token punctuation">:</span>/etc/localtime
      <span class="token punctuation">-</span> /home/env/gitlab/config<span class="token punctuation">:</span>/etc/gitlab
      <span class="token punctuation">-</span> /home/env/gitlab/config/.license_encryption_key.pub<span class="token punctuation">:</span>/opt/gitlab/embedded/service/gitlab<span class="token punctuation">-</span>rails/.license_encryption_key.pub
      <span class="token punctuation">-</span> /data/env/gitlab/logs<span class="token punctuation">:</span>/var/log/gitlab
    <span class="token key atrule">ports</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token string">&quot;7580:7580&quot;</span>
      <span class="token punctuation">-</span> <span class="token string">&quot;7522:7522&quot;</span>
      <span class="token punctuation">-</span> <span class="token string">&quot;7550:7550&quot;</span>
      <span class="token punctuation">-</span> <span class="token string">&quot;7505:7505&quot;</span>
      <span class="token punctuation">-</span> <span class="token string">&quot;7508:80&quot;</span>
    <span class="token key atrule">environment</span><span class="token punctuation">:</span>
      <span class="token key atrule">GITLAB_OMNIBUS_CONFIG</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">
        external_url &#39;http://xxx.xxx.xxx:7580&#39;
        registry_external_url &#39;http://xxx.xxx.xxx:7550&#39;
        gitlab_rails[&#39;gitlab_shell_ssh_port&#39;] = 7522</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-启动gitlab" tabindex="-1"><a class="header-anchor" href="#_4-启动gitlab" aria-hidden="true">#</a> 4.启动gitlab</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker-compose</span> up <span class="token parameter variable">-d</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-访问gitlab" tabindex="-1"><a class="header-anchor" href="#_5-访问gitlab" aria-hidden="true">#</a> 5.访问gitlab</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>http://ip:7580
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,10);function h(m,g){const s=p("RouterLink");return t(),i("div",null,[d,u,a("h3",b,[v,n(" 1.安装docker并配置docker-compose "),l(s,{to:"/server/docker/1.html"},{default:c(()=>[n("查看使用方式")]),_:1})]),k])}const x=e(r,[["render",h],["__file","1.html.vue"]]);export{x as default};
