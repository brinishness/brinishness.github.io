import{_ as s,X as i,Y as t,Z as n,$ as a,a0 as c,a2 as d,a3 as r,F as o}from"./framework-c8dc88ca.js";const l={},p=n("h1",{id:"jenkins部署",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#jenkins部署","aria-hidden":"true"},"#"),a(" jenkins部署")],-1),u=n("h2",{id:"使用docker-compose部署jenkins",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#使用docker-compose部署jenkins","aria-hidden":"true"},"#"),a(" 使用docker-compose部署jenkins")],-1),k={id:"_1-安装docker并配置docker-compose-查看使用方式",tabindex:"-1"},h=n("a",{class:"header-anchor",href:"#_1-安装docker并配置docker-compose-查看使用方式","aria-hidden":"true"},"#",-1),v=r(`<h3 id="_2-创建jenkins目录" tabindex="-1"><a class="header-anchor" href="#_2-创建jenkins目录" aria-hidden="true">#</a> 2.创建jenkins目录</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /data/env/jenkins/data
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-映射目录配置-附配置文件" tabindex="-1"><a class="header-anchor" href="#_3-映射目录配置-附配置文件" aria-hidden="true">#</a> 3.映射目录配置 (附配置文件)</h3><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&quot;3.6&quot;</span>
<span class="token key atrule">services</span><span class="token punctuation">:</span>
  <span class="token key atrule">jenkins</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> jenkins/jenkins
    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> jenkins
    <span class="token key atrule">privileged</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always
    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> /etc/localtime<span class="token punctuation">:</span>/etc/localtime
      <span class="token punctuation">-</span> /var/run/docker.sock<span class="token punctuation">:</span>/var/run/docker.sock
      <span class="token punctuation">-</span> /data/env/jenkins/data<span class="token punctuation">:</span>/var/jenkins_home
      <span class="token punctuation">-</span> /usr/bin/docker<span class="token punctuation">:</span>/usr/bin/docker
      <span class="token punctuation">-</span> /usr/local/bin/docker<span class="token punctuation">-</span>compose<span class="token punctuation">:</span>/usr/local/bin/docker<span class="token punctuation">-</span>compose
    <span class="token key atrule">ports</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token string">&quot;7480:8080&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-启动jenkins" tabindex="-1"><a class="header-anchor" href="#_4-启动jenkins" aria-hidden="true">#</a> 4.启动jenkins</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker-compose</span> up <span class="token parameter variable">-d</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-访问jenkins" tabindex="-1"><a class="header-anchor" href="#_5-访问jenkins" aria-hidden="true">#</a> 5.访问jenkins</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>http://ip:7480
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_6-获取初始密码" tabindex="-1"><a class="header-anchor" href="#_6-获取初始密码" aria-hidden="true">#</a> 6.获取初始密码</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> jenkins <span class="token function">cat</span> /var/jenkins_home/secrets/initialAdminPassword
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_7-安装插件" tabindex="-1"><a class="header-anchor" href="#_7-安装插件" aria-hidden="true">#</a> 7.安装插件</h3><h3 id="_8-创建管理员账号" tabindex="-1"><a class="header-anchor" href="#_8-创建管理员账号" aria-hidden="true">#</a> 8.创建管理员账号</h3><h3 id="_9-完成jenkins安装" tabindex="-1"><a class="header-anchor" href="#_9-完成jenkins安装" aria-hidden="true">#</a> 9.完成jenkins安装</h3>`,13);function m(b,_){const e=o("RouterLink");return i(),t("div",null,[p,u,n("h3",k,[h,a(" 1.安装docker并配置docker-compose "),c(e,{to:"/server/docker/1.html"},{default:d(()=>[a("查看使用方式")]),_:1})]),v])}const g=s(l,[["render",m],["__file","1.html.vue"]]);export{g as default};
